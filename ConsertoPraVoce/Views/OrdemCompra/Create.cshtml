@model ConsertoPraVoce.Model.OrdemCompra

@{
	ViewBag.Title = "Create";
}
<script>
	$(document).ready(function () {
		$("#txtValorTotal").priceFormat({
			prefix: '',
			centsSeparator: ',',
			thousandsSeparator: '.'
		});

		$("#txtValor").priceFormat({
			prefix: '',
			centsSeparator: ',',
			thousandsSeparator: '.'
		});

		$("#btnSave").on('click', function () {
			var tabelaProdutos = gerarJsonFromTabela();
			var url = '@Url.Action("SaveOrder", "OrdemCompra")';
			//var data = [];

			//data.push(produtos);

			$.ajax({
				url: url,
				type: "POST",
				data: {
					ordemCompra: {
						DescricaoCurta: "\"" + $("#DescricaoCurta").val() + "\"",
						DescricaoLonga: "\"" + $("#DescricaoLonga").val() + "\"",
						DataCriacao: "\"" + Date($("#DataCriacao").val()) + "\"",
						DataEdicao: "\"" + $("#DataEdicao").val() + "\"",
						IdFornecedor: "\"" + $("#IdFornecedor").val() + "\""
					},
					produtos: tabelaProdutos
				},
				datatype: 'json',
				ContentType: 'application/json;utf-8'
			}).done(function (resp) {
				alert('Success ' + resp);
			}).error(function (err) {
				alert("Error " + err.status);
			});

		});

		$('#addProduto').click(function () {
			var index = contador++;// (new Date()).getTime();

			var linha = "<tr id='linha" + index + "'>" +
						//"<td>" + index + "</td>" +
						"<td data-override=\"" + $("#ddlMarca").val() + "\">" + $("#ddlMarca option:selected").text() + "</td>" +
						"<td data-override=\"" + $("#ddlModelo").val() + "\">" + $("#ddlModelo option:selected").text() + "</td>" +
						"<td data-override=\"" + $("#ddlTipo").val() + "\">" + $("#ddlTipo option:selected").text() + "</td>" +
						"<td data-override=\"" + $("#ddlCor").val() + "\">" + $("#ddlCor option:selected").text() + "</td>" +
						"<td style=\"text-align:right\">" + $("#txtQuantidade").val() + "</td>" +
						"<td style=\"text-align:right\">" + $("#txtValor").val() + "</td>" +
						"<td style=\"text-align:right\">" + $("#txtTotal").val() + "</td>" +
						"<td> <a href='#' onclick='excluirLinha(" + index + ")'> Excluir</a></td>" +
						"</tr>";

			$('#produtos tbody').append(linha);
		});

		buscarMarcas();

	});

	function excluirLinha(index) {
		$("#linha" + index).remove();
	}

	var contador = 0;


	function buscarMarcas() {
		$.getJSON('@Url.Action("BuscarMarcas", "OrdemCompra")', function (result) {
			$("#ddlMarca").html(""); // makes select null before filling process
			var data = result.data;
			for (var i = 0; i < data.length; i++) {
				$("#ddlMarca").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>")
			}
			buscarModelosAparelhos($("#ddlMarca").val());
		})

	}

	function buscarModelosAparelhos(value) {
		$.getJSON('@Url.Action("BuscarModelosAparelhos", "OrdemCompra")' + "?idMarca=" + value, function (result) {
			$("#ddlModelo").html(""); // makes select null before filling process
			var data = result.data;
			for (var i = 0; i < data.length; i++) {
				$("#ddlModelo").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>")
			}
			buscarTiposProdutos($("#ddlModelo").val());
		})
	}

	function buscarTiposProdutos(value) {
		$.getJSON('@Url.Action("BuscarTiposProdutos", "OrdemCompra")' + "?idModelo=" + value, function (result) {
			$("#ddlTipo").html(""); // makes select null before filling process
			var data = result.data;
			for (var i = 0; i < data.length; i++) {
				$("#ddlTipo").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>")
			}

		})
	}

	function buscarCores(idTipo) {
		var idModelo = $("#ddlModelo").val();
		$.getJSON('@Url.Action("BuscarCores", "OrdemCompra")' + "?idModelo=" + idModelo + "&idTipo=" + idTipo, function (result) {
			$("#ddlCor").html(""); // makes select null before filling process
			var data = result.data;
			for (var i = 0; i < data.length; i++) {
				$("#ddlCor").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>")
			}

		})
	}




	function atualizarTotalLinha() {
		var quantidade = $("#txtQuantidade").val();
		var valorUnitario = $("#txtValor").val().replace(',', '.');
		var valorTotal = quantidade * valorUnitario;
		$("#txtTotal").val(valorTotal);
		atualizarTotalGeral(valorTotal);
	}

	function atualizarTotalGeral(soma) {
		$("#totalPedido").val($("#totalPedido").val() + soma);

	}

	function atualizarDescricao(value) {
		var desc = $("#IdFornecedor option:selected").text() + ' - ' + $("#DataCriacao").val();
		$("#DescricaoCurta").val(desc);
	}

	function gerarJsonFromTabela() {
		var table = $('#produtos').tableToJSON({
			ignoreColumns: [7]
		});

		console.log(table.pop());
		console.log(table);
		return table;
	}


</script>

@using (Html.BeginForm("Create", "OrdemCompra", FormMethod.Get, new { @class = "form-horizontal", @style = "max-width: 900px;" }))
{
	@Html.AntiForgeryToken()
	@*<div class="form-horizontal" style="max-width: 800px;">*@

	<div class="row">
		<h4>OrdemCompra</h4>
		<hr />
		<fieldset>
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.DescricaoCurta, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.DescricaoCurta, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
					@Html.ValidationMessageFor(model => model.DescricaoCurta, "", new { @class = "text-danger" })
				</div>
				@Html.LabelFor(model => model.DataCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.DataCriacao, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DataCriacao, "", new { @class = "text-danger" })
				</div>

			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DescricaoLonga, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DescricaoLonga, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DescricaoLonga, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IdFornecedor, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdFornecedor", null, "Selecionar", htmlAttributes: new { @class = "form-control", @onchange = "javascript:atualizarDescricao();" })
					@Html.ValidationMessageFor(model => model.IdFornecedor, "", new { @class = "text-danger" })
				</div>


				@Html.LabelFor(model => model.DataEdicao, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.DataEdicao, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DataEdicao, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group ">
				<div class="col-md-2">
					<h5 class="blog-title pull-right">Adicionar Produtos</h5>
				</div>
			</div>

			<div class="form-group">
				<label class="control-label col-md-2">Marca</label>
				<div class="col-md-4">
					<select class="form-control" id="ddlMarca" onchange="javascript:buscarModelosAparelhos(this.value);"></select>
				</div>

				<label class="control-label col-md-2">Modelo</label>
				<div class="col-md-4">
					<select class="form-control" id="ddlModelo" onchange="javascript:buscarTiposProdutos(this.value);"></select>
				</div>
			</div>
			<div class="form-group">
				<label class="control-label col-md-2">Tipo</label>
				<div class="col-md-4">
					<select class="form-control" id="ddlTipo" onchange="javascript:buscarCores(this.value);"></select>
				</div>
				<label class="control-label col-md-2">Cor</label>
				<div class="col-md-4">
					<select class="form-control" id="ddlCor"></select>
				</div>
			</div>
			<div class="form-group">


				<label class="control-label col-md-2">Quantidade</label>
				<div class="col-md-4">
					<input type="text" class="form-control" style="text-align:right" id="txtQuantidade" onblur="atualizarTotalLinha()" />
				</div>

				<label class="control-label col-md-2">Valor Un.</label>
				<div class="col-md-4">
					<input type="text" class="form-control" style="text-align:right" id="txtValor" onblur="atualizarTotalLinha()" />
				</div>
				<div style="visibility:hidden">
					<label class="control-label col-md-1">Total</label>
					<div class="col-md-2">
						<input type="text" class="form-control" style="text-align:right" id="txtTotal" disabled="disabled" />
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-lg-12">
					<input type="button" id="addProduto" value="Adicionar Produto" class="btn btn-default pull-right" />
				</div>
			</div>

			<div class="form-group ">
				<div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 col-md-offset-2">
					<div class="blog">
						<div class="blog-header">
							<h5 class="blog-title">Produtos</h5>
						</div>
						<div class="blog-body">
							<table id="produtos" class="table no-margin">
								<thead>
									<tr>
										<th>Marca</th>
										<th>Modelo</th>
										<th>Tipo</th>
										<th>Cor</th>
										<th style="text-align:right">Quantidade</th>
										<th style="text-align:right" data-override="ValorUnitario">Valor Unitário</th>
										<th style="text-align:right" data-override="ValorTotal">Valor Total</th>
										<th>Excluir</th>
									</tr>
								</thead>
								<tbody></tbody>
								<tfoot>
									<tr>
										<td class="total" style="text-align:right" colspan="6">Total do pedido</td>
										<td style="text-align:right"><label id="totalPedido" /></td>
										<td></td>
									</tr>
								</tfoot>
							</table>
						</div>
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-lg-6">
					<input type="button" id="btnSave" value="Salvar" class="btn btn-default" />
				</div>
			</div>
		</fieldset>
	</div>
	<div>
		@Html.ActionLink("Voltar à Lista", "Index")
	</div>
	@*</div>*@
}


