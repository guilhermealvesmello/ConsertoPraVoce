@model ConsertoPraVoce.Model.Transacao

@{
	ViewBag.Title = "Create";
}

<script type="text/javascript">
	function buscarSubCategorias(val) {
		console.log(val);
		$.getJSON('@Url.Action("BuscarSubCategorias", "Transacao")' + "?value=" + val, function (result) {
			$("#IdSubCategoriaTransacao").html(""); // makes select null before filling process
			var data = result.data;
			for (var i = 0; i < data.length; i++) {
				$("#IdSubCategoriaTransacao").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>")
			}

		})
	}

</script>


@using (Html.BeginForm("Create", "Transacao", FormMethod.Post, new { @class = "form-horizontal", @style = "max-width: 800px;" }))
{
	@Html.AntiForgeryToken()

	<div class="row">
		<h4>Transacao</h4>
		<hr />
		<fieldset>
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.DataTransacao, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.DataTransacao, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DataTransacao, "", new { @class = "text-danger" })
				</div>

				@Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ValorBruto, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.ValorBruto, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ValorBruto, "", new { @class = "text-danger" })
				</div>

			</div>



			<div class="form-group">
				@Html.LabelFor(model => model.IdCategoriaTransacao, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdCategoriaTransacao", null, "Selecionar", htmlAttributes: new { @class = "form-control", @onchange = "javascript:buscarSubCategorias(this.value);" })
					@Html.ValidationMessageFor(model => model.IdCategoriaTransacao, "", new { @class = "text-danger" })
				</div>
				@Html.LabelFor(model => model.IdSubCategoriaTransacao, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdSubCategoriaTransacao", null, "Selecionar", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.IdSubCategoriaTransacao, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdCliente", null, "Selecionar", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
				</div>

				@Html.LabelFor(model => model.Parcelas, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.Parcelas, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Parcelas, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IdConta, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdConta", null, "Selecionar", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.IdConta, "", new { @class = "text-danger" })
				</div>

				@Html.LabelFor(model => model.PagamentoRecorrente, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.PagamentoRecorrente)
					@Html.ValidationMessageFor(model => model.PagamentoRecorrente, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IdOrdemCompra, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdOrdemCompra", null, "Selecionar", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.IdOrdemCompra, "", new { @class = "text-danger" })
				</div>

				@Html.LabelFor(model => model.IdOrdemServico, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownList("IdOrdemServico", null, "Selecionar", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.IdOrdemServico, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Detalhes, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Detalhes, new { htmlAttributes = new { @class = "form-control", rows = 5 } })
					@Html.ValidationMessageFor(model => model.Detalhes, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-lg-6">
					<input type="submit" value="Salvar" class="btn btn-default" />
				</div>
			</div>
		</fieldset>
	</div>
	<div>
		@Html.ActionLink("Voltar à Lista", "Index")
	</div>
}


